<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\File;
use Illuminate\Support\Facades\Input;

class OctaveController extends Controller
{
    public function index()
    {
       // $response = shell_exec("octave --no-gui --quiet ../../kyvadlo.txt {r}");      

        $command = Storage::get('octave/gulicka.txt');        

        $response = ltrim(shell_exec('octave --no-gui --quiet --eval "pkg load control;'. $command .'"'));   

        return response($response,200);
    }

    public function execute_octave_command(Request $request)
    {
        $data = $request->json()->all();

       $command = $data["command"];

       $result = ltrim(shell_exec('octave --no-gui --quiet --eval "'. $command .'"'));   

       $response = array(
           "result" => $result
       );

       return json_encode($response);
    }


    public function get_ball_data(Request $request)
    {
        try {
           
        $query = ($request->query());

        $r = $query["r"];
        $startPosition = $query["startPosition"];
        $startSpeed = $query["startSpeed"];

        $command = $this->get_ball_script($r,$startPosition,$startSpeed);

        $response = trim(shell_exec('octave --no-gui --quiet --eval "pkg load control;'. $command .'"'));


        $parsed = explode("ans =",$response);		

        $position = explode('  ',$parsed[1]);
        $alfa = explode('  ',$parsed[2]);

	$position = array_map('trim', $position);
	$alfa = array_map('trim',$alfa);
       
        $return = array(
            "position" => $position,
            "angle" => $alfa
        );

        return json_encode($return);
        } catch (\Throwable $th) {
//throw $th;         
  	 return response("Error",500);
        }


    }



    private function get_ball_script($r,$startPosition,$startSpeed)
    {
        return "
                m = 0.111;
                R = 0.015;
                g = -9.8;
                J = 9.99e-6;
                H = -m*g/(J/(R^2)+m);
                A = [0 1 0 0; 0 0 H 0; 0 0 0 1; 0 0 0 0];
                B = [0;0;0;1];
                C = [1 0 0 0];
                D = [0];   
                K = place(A,B,[-2+2i,-2-2i,-20,-80]);
                N = -inv(C*inv(A-B*K)*B);

                sys = ss(A-B*K,B,C,D);

                t = 0:0.01:5;
                r = ". $r . ";
                initPozicia= " . $startPosition . ";
                initRychlost= " . $startSpeed . ";
                [y,t,x]=lsim(N*sys,r*ones(size(t)),t,[initPozicia;0;initRychlost;0]);
                N*x(:,1)
                x(:,3)
                ";
    }

    public function get_plane_data(Request $request)
    {
        return '{"naklonLietadla":["","0.00000","0.00154","0.00586","0.01246","0.02093","0.03084","0.04182","0.05353","0.06567","0.07797","0.09021","0.10217","0.11371","0.12468","0.13499","0.14455","0.15332","0.16125","0.16835","0.17460","0.18004","0.18468","0.18857","0.19175","0.19428","0.19621","0.19759","0.19849","0.19897","0.19908","0.19888","0.19841","0.19774","0.19690","0.19595","0.19491","0.19382","0.19271","0.19160","0.19053","0.18950","0.18853","0.18764","0.18682","0.18610","0.18546","0.18492","0.18447","0.18410","0.18383","0.18363","0.18351","0.18346","0.18348","0.18355","0.18368","0.18385","0.18405","0.18429","0.18456","0.18484","0.18514","0.18546","0.18577","0.18609","0.18641","0.18673","0.18704","0.18734","0.18763","0.18792","0.18819","0.18845","0.18869","0.18892","0.18914","0.18935","0.18955","0.18973","0.18990","0.19007","0.19022","0.19037","0.19051","0.19064","0.19076","0.19088","0.19100","0.19111","0.19121","0.19132","0.19142","0.19152","0.19161","0.19171","0.19181","0.19190","0.19199","0.19209","0.19218","0.19227","0.19236","0.19246","0.19255","0.19264","0.19273","0.19282","0.19291","0.19301","0.19310","0.19319","0.19327","0.19336","0.19345","0.19354","0.19363","0.19371","0.19380","0.19388","0.19396","0.19404","0.19413","0.19421","0.19428","0.19436","0.19444","0.19451","0.19459","0.19466","0.19473","0.19480","0.19487","0.19494","0.19501","0.19508","0.19514","0.19521","0.19527","0.19533","0.19540","0.19546","0.19552","0.19558","0.19564","0.19569","0.19575","0.19581","0.19586","0.19592","0.19597","0.19603","0.19608","0.19613","0.19618","0.19623","0.19628","0.19633","0.19638","0.19643","0.19647","0.19652","0.19657","0.19661","0.19666","0.19670","0.19675","0.19679","0.19683","0.19687","0.19692","0.19696","0.19700","0.19704","0.19708","0.19711","0.19715","0.19719","0.19723","0.19727","0.19730","0.19734","0.19737","0.19741","0.19744","0.19748","0.19751","0.19754","0.19758","0.19761","0.19764","0.19767","0.19770","0.19773","0.19776","0.19779","0.19782","0.19785","0.19788","0.19791","0.19793","0.19796","0.19799","0.19802","0.19804","0.19807","0.19809","0.19812","0.19814","0.19817","0.19819","0.19822","0.19824","0.19826","0.19829","0.19831","0.19833","0.19835","0.19838","0.19840","0.19842","0.19844","0.19846","0.19848","0.19850","0.19852","0.19854","0.19856","0.19858","0.19860","0.19862","0.19864","0.19865","0.19867","0.19869","0.19871","0.19872","0.19874","0.19876","0.19877","0.19879","0.19881","0.19882","0.19884","0.19885","0.19887","0.19888","0.19890","0.19891","0.19893","0.19894","0.19896","0.19897","0.19898","0.19900","0.19901","0.19902","0.19904","0.19905","0.19906","0.19907","0.19909","0.19910","0.19911","0.19912","0.19913","0.19915","0.19916","0.19917","0.19918","0.19919","0.19920","0.19921","0.19922","0.19923","0.19924","0.19925","0.19926","0.19927","0.19928","0.19929","0.19930","0.19931","0.19932","0.19933","0.19934","0.19935","0.19935","0.19936","0.19937","0.19938","0.19939","0.19940","0.19940","0.19941","0.19942","0.19943","0.19944","0.19944","0.19945","0.19946","0.19946","0.19947","0.19948","0.19949","0.19949","0.19950","0.19951","0.19951","0.19952","0.19953","0.19953","0.19954","0.19954","0.19955","0.19956","0.19956","0.19957","0.19957","0.19958","0.19958","0.19959","0.19960","0.19960","0.19961","0.19961","0.19962","0.19962","0.19963","0.19963","0.19964","0.19964","0.19965","0.19965","0.19966","0.19966","0.19966","0.19967","0.19967","0.19968","0.19968","0.19969","0.19969","0.19969","0.19970","0.19970","0.19971","0.19971","0.19971","0.19972","0.19972","0.19973","0.19973","0.19973","0.19974","0.19974","0.19974","0.19975","0.19975","0.19975","0.19976","0.19976","0.19976","0.19977","0.19977","0.19977","0.19978","0.19978","0.19978","0.19978","0.19979","0.19979","0.19979","0.19980","0.19980","0.19980","0.19980","0.19981","0.19981","0.19981","0.19981","0.19982","0.19982","0.19982","0.19982","0.19983","0.19983","0.19983","0.19983","0.19983","0.19984","0.19984","0.19984","0.19984","0.19985","0.19985","0.19985","0.19985","0.19985","0.19986","0.19986","0.19986"],
                "naklonKlapky":["","2.8284e-01","2.5648e-01","2.3165e-01","2.0853e-01","1.8725e-01","1.6787e-01","1.5045e-01","1.3496e-01","1.2136e-01","1.0961e-01","9.9596e-02","9.1227e-02","8.4383e-02","7.8935e-02","7.4753e-02","7.1701e-02","6.9644e-02","6.8450e-02","6.7992e-02","6.8148e-02","6.8804e-02","6.9853e-02","7.1198e-02","7.2750e-02","7.4432e-02","7.6173e-02","7.7914e-02","7.9604e-02","8.1200e-02","8.2668e-02","8.3981e-02","8.5118e-02","8.6065e-02","8.6815e-02","8.7364e-02","8.7713e-02","8.7866e-02","8.7830e-02","8.7616e-02","8.7234e-02","8.6699e-02","8.6024e-02","8.5225e-02","8.4316e-02","8.3312e-02","8.2228e-02","8.1078e-02","7.9876e-02","7.8634e-02","7.7364e-02","7.6077e-02","7.4782e-02","7.3488e-02","7.2203e-02","7.0933e-02","6.9683e-02","6.8459e-02","6.7263e-02","6.6098e-02","6.4967e-02","6.3871e-02","6.2811e-02","6.1786e-02","6.0797e-02","5.9843e-02","5.8922e-02","5.8033e-02","5.7176e-02","5.6348e-02","5.5547e-02","5.4772e-02","5.4020e-02","5.3291e-02","5.2581e-02","5.1890e-02","5.1216e-02","5.0557e-02","4.9911e-02","4.9278e-02","4.8656e-02","4.8044e-02","4.7441e-02","4.6846e-02","4.6259e-02","4.5678e-02","4.5104e-02","4.4535e-02","4.3972e-02","4.3415e-02","4.2862e-02","4.2314e-02","4.1771e-02","4.1233e-02","4.0699e-02","4.0170e-02","3.9647e-02","3.9128e-02","3.8614e-02","3.8105e-02","3.7602e-02","3.7104e-02","3.6611e-02","3.6124e-02","3.5642e-02","3.5166e-02","3.4696e-02","3.4232e-02","3.3774e-02","3.3322e-02","3.2875e-02","3.2435e-02","3.2000e-02","3.1571e-02","3.1148e-02","3.0731e-02","3.0320e-02","2.9914e-02","2.9514e-02","2.9120e-02","2.8731e-02","2.8348e-02","2.7970e-02","2.7597e-02","2.7229e-02","2.6867e-02","2.6509e-02","2.6157e-02","2.5809e-02","2.5466e-02","2.5128e-02","2.4795e-02","2.4466e-02","2.4141e-02","2.3821e-02","2.3505e-02","2.3193e-02","2.2885e-02","2.2582e-02","2.2282e-02","2.1987e-02","2.1695e-02","2.1408e-02","2.1124e-02","2.0844e-02","2.0567e-02","2.0294e-02","2.0025e-02","1.9759e-02","1.9497e-02","1.9238e-02","1.8983e-02","1.8731e-02","1.8482e-02","1.8237e-02","1.7995e-02","1.7756e-02","1.7520e-02","1.7287e-02","1.7058e-02","1.6831e-02","1.6608e-02","1.6387e-02","1.6170e-02","1.5955e-02","1.5743e-02","1.5534e-02","1.5327e-02","1.5124e-02","1.4923e-02","1.4725e-02","1.4529e-02","1.4336e-02","1.4146e-02","1.3958e-02","1.3772e-02","1.3589e-02","1.3409e-02","1.3231e-02","1.3055e-02","1.2882e-02","1.2711e-02","1.2542e-02","1.2375e-02","1.2211e-02","1.2049e-02","1.1889e-02","1.1731e-02","1.1575e-02","1.1421e-02","1.1270e-02","1.1120e-02","1.0972e-02","1.0827e-02","1.0683e-02","1.0541e-02","1.0401e-02","1.0263e-02","1.0127e-02","9.9921e-03","9.8594e-03","9.7285e-03","9.5993e-03","9.4718e-03","9.3460e-03","9.2219e-03","9.0994e-03","8.9786e-03","8.8594e-03","8.7417e-03","8.6256e-03","8.5111e-03","8.3980e-03","8.2865e-03","8.1765e-03","8.0679e-03","7.9607e-03","7.8550e-03","7.7507e-03","7.6478e-03","7.5462e-03","7.4460e-03","7.3471e-03","7.2495e-03","7.1532e-03","7.0582e-03","6.9645e-03","6.8720e-03","6.7808e-03","6.6907e-03","6.6019e-03","6.5142e-03","6.4277e-03","6.3423e-03","6.2581e-03","6.1750e-03","6.0930e-03","6.0120e-03","5.9322e-03","5.8534e-03","5.7757e-03","5.6990e-03","5.6233e-03","5.5486e-03","5.4749e-03","5.4022e-03","5.3305e-03","5.2597e-03","5.1898e-03","5.1209e-03","5.0529e-03","4.9858e-03","4.9196e-03","4.8543e-03","4.7898e-03","4.7262e-03","4.6634e-03","4.6015e-03","4.5404e-03","4.4801e-03","4.4206e-03","4.3619e-03","4.3040e-03","4.2468e-03","4.1904e-03","4.1347e-03","4.0798e-03","4.0257e-03","3.9722e-03","3.9194e-03","3.8674e-03","3.8160e-03","3.7654e-03","3.7153e-03","3.6660e-03","3.6173e-03","3.5693e-03","3.5219e-03","3.4751e-03","3.4290e-03","3.3834e-03","3.3385e-03","3.2942e-03","3.2504e-03","3.2072e-03","3.1646e-03","3.1226e-03","3.0811e-03","3.0402e-03","2.9999e-03","2.9600e-03","2.9207e-03","2.8819e-03","2.8436e-03","2.8059e-03","2.7686e-03","2.7318e-03","2.6956e-03","2.6598e-03","2.6244e-03","2.5896e-03","2.5552e-03","2.5213e-03","2.4878e-03","2.4547e-03","2.4221e-03","2.3900e-03","2.3582e-03","2.3269e-03","2.2960e-03","2.2655e-03","2.2354e-03","2.2058e-03","2.1765e-03","2.1476e-03","2.1190e-03","2.0909e-03","2.0631e-03","2.0357e-03","2.0087e-03","1.9820e-03","1.9557e-03","1.9297e-03","1.9041e-03","1.8788e-03","1.8539e-03","1.8292e-03","1.8049e-03","1.7810e-03","1.7573e-03","1.7340e-03","1.7110e-03","1.6882e-03","1.6658e-03","1.6437e-03","1.6219e-03","1.6003e-03","1.5791e-03","1.5581e-03","1.5374e-03","1.5170e-03","1.4968e-03","1.4770e-03","1.4574e-03","1.4380e-03","1.4189e-03","1.4001e-03","1.3815e-03","1.3631e-03","1.3450e-03","1.3272e-03","1.3095e-03","1.2921e-03","1.2750e-03","1.2580e-03","1.2413e-03","1.2249e-03","1.2086e-03","1.1925e-03","1.1767e-03","1.1611e-03","1.1457e-03","1.1304e-03","1.1154e-03","1.1006e-03","1.0860e-03","1.0716e-03","1.0573e-03","1.0433e-03","1.0294e-03","1.0158e-03","1.0023e-03","9.8898e-04","9.7584e-04","9.6288e-04","9.5010e-04","9.3748e-04","9.2503e-04","9.1274e-04","9.0062e-04","8.8866e-04","8.7686e-04","8.6521e-04","8.5372e-04","8.4239e-04","8.3120e-04","8.2016e-04","8.0927e-04","7.9852e-04","7.8792e-04","7.7745e-04","7.6713e-04","7.5694e-04","7.4689e-04","7.3697e-04","7.2718e-04","7.1753e-04","7.0800e-04","6.9859e-04","6.8932e-04","6.8016e-04","6.7113e-04"]}';
        try {
           
        $query = ($request->query());

        $r = $query["r"];
        $startPosition = $query["startPosition"];
        $startSpeed = $query["startSpeed"];

        $command = $this->get_plane_script($r);

        $response = trim(shell_exec('octave --no-gui --quiet --eval "pkg load control;'. $command .'"'));


        $parsed = explode("ans =",$response);		

        $lietadlo = explode('  ',$parsed[1]);
        $klapka = explode('  ',$parsed[2]);
        $time = explode('  ',$parsed[3]);

	    $lietadlo = array_map('trim', $lietadlo);
        $klapka = array_map('trim',$klapka);
        $time = array_map('trim',$time);
       
        $return = array(
            "naklonLietadla" => $lietadlo,
            "naklonKlapky" => $klapka,
            "time" => $time
        );

        return json_encode($return);
        } catch (\Throwable $th) {
//throw $th;         
  	 return response("Error",500);
        }


    }

    private function get_plane_script($r)
    {
        return "
        A = [-0.313 56.7 0; -0.0139 -0.426 0; 0 56.7 0];
        B = [0.232; 0.0203; 0];
        C = [0 0 1];
        D = [0];

        p = 2;
        K = lqr(A,B,p*C'*C,1);
        N = -inv(C(1,:)*inv(A-B*K)*B);

        sys = ss(A-B*K, B*N, C, D);

        t = 0:0.1:40;
        r =" .$r .";
        initAlfa=0;
        initQ=0;
        initTheta=0;
        [y,t,x]=lsim(sys,r*ones(size(t)),t,[initAlfa;initQ;initTheta]);
        x(:,3)
        r*ones(size(t))*N-x*K'
        t(:)";

    }

}
